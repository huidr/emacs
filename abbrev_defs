;;-*-coding: utf-8;-*-
(define-abbrev-table 'LaTeX-mode-abbrev-table
  '(
    ("b" "$b$" nil :count 0)
    ("c" "$c$" nil :count 0)
    ("d" "$d$" nil :count 0)
    ("e" "$e$" nil :count 0)
    ("f" "$f$" nil :count 0)
    ("g" "$g$" nil :count 0)
    ("h" "$h$" nil :count 0)
    ("i" "$i$" nil :count 0)
    ("j" "$j$" nil :count 0)
    ("k" "$k$" nil :count 0)
    ("l" "$l$" nil :count 0)
    ("m" "$m$" nil :count 0)
    ("n" "$n$" nil :count 0)
    ("o" "$o$" nil :count 0)
    ("p" "$p$" nil :count 0)
    ("q" "$q$" nil :count 0)
    ("r" "$r$" nil :count 0)
    ("s" "$s$" nil :count 0)
    ("t" "$t$" nil :count 0)
    ("u" "$u$" nil :count 0)
    ("v" "$v$" nil :count 0)
    ("w" "$w$" nil :count 0)
    ("x" "$x$" nil :count 3)
    ("y" "$y$" nil :count 2)
    ("z" "$z$" nil :count 0)
   ))

(define-abbrev-table 'lean4-abbrev-table
  '(
    ("and" "∧" nil :count 1)
    ("arr" "#[" nil :count 0)
    ("ax" "axiom" nil :count 0)
    ("cdot" "·" nil :count 0)
    ("ch" "#check" nil :count 0)
    ("df" ":=" nil :count 1)
    ("ev" "#eval" nil :count 0)
    ("ex" "example" nil :count 0)
    ("ftor" "<$>" nil :count 0)
    ("im" "=>" nil :count 0)
    ("lar" "←" nil :count 3)
    ("not" "¬" nil :count 2)
    ("or" "∨" nil :count 1)
    ("prnt" "#print" nil :count 0)
    ("rd" "reduce" nil :count 0)
    ("str" "String" nil :count 0)
    ("th" "theorem" nil :count 0)
    ("to" "→" nil :count 2)
   ))
